services:
  waha:
    image: devlikeapro/waha:latest
    container_name: waha
    platform: linux/amd64
    environment:
      WHATSAPP_HOOK_URL: http://host.docker.internal:5678/webhook/webhook
      WHATSAPP_DEFAULT_ENGINE: GOWS
      WHATSAPP_HOOK_EVENTS: message
    ports:
      - "3000:3000"

  kafka-meu-postinho:
    image: apache/kafka:latest
    container_name: kafka-meu-postinho
    hostname: kafka-meu-postinho
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-meu-postinho:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-meu-postinho:9093
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs

  kafka-init:
    image: apache/kafka:latest
    depends_on:
      - kafka-meu-postinho
    entrypoint: [ "/bin/sh", "-c" ]
    command: |
      "
      sleep 5 &&
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-meu-postinho:9092 --create --if-not-exists --topic __consumer_offsets --partitions 50 --replication-factor 1 &&
      /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-meu-postinho:9092 --create --if-not-exists --topic notification --partitions 1 --replication-factor 1
      "

  meu-postinho:
    build:
      context: ./meu-postinho-api
    container_name: meu-postinho
    depends_on:
      - kafka-init
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-meu-postinho:9092
    ports:
      - "8080:8080"

  meu-postinho-notifier:
    build:
      context: ./meu-postinho-notifier
    container_name: meu-postinho-notifier
    depends_on:
      - kafka-init
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-meu-postinho:9092
    ports:
      - "8081:8080"

networks:
  default:
    name: meu-postinho-network